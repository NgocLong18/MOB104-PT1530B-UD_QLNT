/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sample.ui;

import com.sample.DAO.HoaDonChiTietDAO;
import com.sample.model.HoaDonChiTiet;
import java.io.BufferedOutputStream;
import java.io.FileOutputStream;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;
import javafx.scene.control.Cell;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.html.HTMLDocument.Iterator;
import org.apache.poi.hssf.usermodel.HSSFCellStyle;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;


/**
 *
 * @author akais
 */
public class FrHoaDonChiTiet extends javax.swing.JInternalFrame {

    DefaultTableModel model;
    List<HoaDonChiTiet> list = new ArrayList<>();
    HoaDonChiTietDAO DAO_HDCT = new HoaDonChiTietDAO();

    public void loadToTableHDCT() {
        model = (DefaultTableModel) tbl_HDCT.getModel();
        model.setRowCount(0);
        try {
            list = DAO_HDCT.select();
            for (HoaDonChiTiet hdct : list) {
                model.addRow(new Object[]{
                    hdct.getMaDVSD(),
                    hdct.getMaPhong(),
                    hdct.getThanhTien(),
                    hdct.getThoiGian(),
                    hdct.getMaHDDV()
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi đổ dữ liệu vào bảng" + e);
            e.printStackTrace();
        }
    }

    public void loadToTableHDCTByMaPhong() {
        model = (DefaultTableModel) tbl_HDCT.getModel();
        model.setRowCount(0);
        try {
            List<HoaDonChiTiet> listHDCT = DAO_HDCT.findMaHDCTByMaPhong(txt_maPhong.getText());
            for (HoaDonChiTiet hdct : listHDCT) {
                model.addRow(new Object[]{
                    hdct.getMaDVSD(),
                    hdct.getMaPhong(),
                    hdct.getThanhTien(),
                    hdct.getThoiGian(),
                    hdct.getMaHDDV()
                });
            }
            if (listHDCT.size() > 0) {
                JOptionPane.showMessageDialog(this, "Tìm thành công");
                tbl_HDCT.setRowSelectionInterval(0,0 ); 
                btn_KX.setEnabled(true);
            } else {
                loadToTableHDCT();
                JOptionPane.showMessageDialog(this, "Không có thông tin mã phòng này");
                btn_KX.setEnabled(false);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi đổ dữ liệu vào bảng" + e);
            e.printStackTrace();
        }
    }

    public FrHoaDonChiTiet() {
        initComponents();
        loadToTableHDCT();
        btn_KX.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txt_maPhong = new javax.swing.JTextField();
        btn_Tim = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_HDCT = new javax.swing.JTable();
        btn_KX = new javax.swing.JButton();

        setClosable(true);
        setTitle("HÓA ĐƠN CHI TIẾT");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Tìm Hóa Đơn Chi Tiết (Theo phòng)"));

        btn_Tim.setText("Tìm");
        btn_Tim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_TimActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txt_maPhong)
                .addGap(18, 18, 18)
                .addComponent(btn_Tim)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_maPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Tim))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btn_Tim, txt_maPhong});

        tbl_HDCT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã Dịch Vụ", "Mã Phòng", "Thành Tiền", "Thời Gian Thu", "Mã Hóa đơn Dịch Vụ"
            }
        ));
        tbl_HDCT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_HDCTMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_HDCT);

        btn_KX.setText("Kết xuẩt");
        btn_KX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_KXActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 795, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_KX)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_KX)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_TimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_TimActionPerformed
        try {
            loadToTableHDCTByMaPhong();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + e);
        }
    }//GEN-LAST:event_btn_TimActionPerformed

    private void btn_KXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_KXActionPerformed
        FileOutputStream fos = null;
        XSSFWorkbook exelWorkbook = null;
        BufferedOutputStream bfos = null;
        try {

//            JFileChooser exelFileChoser = new JFileChooser("D:\\");
//                exelFileChoser.setDialogTitle("Save as ..");
//                FileNameExtensionFilter fnef = new FileNameExtensionFilter("Files", "xls", "xlsx", "slsm");
//                exelFileChoser.setFileFilter(fnef);
//                int chooser = exelFileChoser.showSaveDialog(null);
//                if (chooser == JFileChooser.APPROVE_OPTION) {
            exelWorkbook = new XSSFWorkbook();
            XSSFSheet
                    excelSheet = exelWorkbook.createSheet("HDCT");
            for (int i = 0; i < model.getRowCount(); i++) {
                Sheet firstSheet = exelWorkbook.getSheetAt(0);
                XSSFRow exCellRow = excelSheet.createRow(i);
                for (int j = 0; j < model.getColumnCount(); j++) {
                    XSSFCell eCell = exCellRow.createCell(j);
                    eCell.setCellValue(model.getValueAt(i, j).toString());
                }
                
            }
//                }
//                if(chooser == JFileChooser.CANCEL_OPTION) {
//                    JOptionPane.showMessageDialog(this, "Lưu không thành công");
//                    return;
//                }
            fos = new FileOutputStream("D:\\HDCT-"+ model.getValueAt(0, 1) +".xlsx");
            bfos = new BufferedOutputStream(fos);
            exelWorkbook.write(bfos);
            JOptionPane.showMessageDialog(this, "Thành công "+model.getValueAt(1, 1)+"");
            exelWorkbook.close();
            bfos.close();
            fos.close();
            btn_KX.setEnabled(false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "lỗi: " + e);
        }

    }//GEN-LAST:event_btn_KXActionPerformed

    private void tbl_HDCTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_HDCTMouseClicked
        
    }//GEN-LAST:event_tbl_HDCTMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_KX;
    private javax.swing.JButton btn_Tim;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_HDCT;
    private javax.swing.JTextField txt_maPhong;
    // End of variables declaration//GEN-END:variables
}
