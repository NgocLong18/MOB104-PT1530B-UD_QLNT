/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sample.ui;

import com.sample.DAO.ThongKeDAO;
import com.sample.model.ThongKe;
import java.io.BufferedOutputStream;
import java.io.FileOutputStream;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author akais
 */
public class FrThongKe extends javax.swing.JInternalFrame {

    PreparedStatement prsm = null;
    ResultSet rls = null;
    DefaultTableModel model;
    List<ThongKe> listThongKe = new ArrayList<>();
    ThongKeDAO thongKeDAO = new ThongKeDAO();
    String thang;
    String nam;
    long millis = System.currentTimeMillis();
    java.sql.Date date = new java.sql.Date(millis);
    String month = date + "";
    String year = date + "";

    public void loadTableThongKeTang() {
        model = (DefaultTableModel) tbl_ThongKe.getModel();
        model.setRowCount(0);
        try {
            check();
            listThongKe = thongKeDAO.selectByAsc(Integer.parseInt(txt_Thang.getText()), Integer.parseInt(txt_Nam.getText()));
            for (ThongKe dv : listThongKe) {
                model.addRow(new Object[]{dv.getMaDV(), dv.getTenDV(), dv.getDoanhThu()});
            }
            if (listThongKe.size() > 0) {

            } else {
                JOptionPane.showMessageDialog(this, "Không có thông tin");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi đổ dữ liệu vào bảng" + e);
            e.printStackTrace();
        }
    }

    public void loadTableThongKeGiam() {
        model = (DefaultTableModel) tbl_ThongKe.getModel();
        model.setRowCount(0);
        try {
            check();
            listThongKe = thongKeDAO.selectByDesc(Integer.parseInt(txt_Thang.getText()), Integer.parseInt(txt_Nam.getText()));
            for (ThongKe dv : listThongKe) {
                model.addRow(new Object[]{dv.getMaDV(), dv.getTenDV(), dv.getDoanhThu()});
            }
            if (listThongKe.size() > 0) {

            } else {
                JOptionPane.showMessageDialog(this, "Không có thông tin");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi đổ dữ liệu vào bảng" + e);
            e.printStackTrace();
        }
    }

    public void check() {
        thang = txt_Thang.getText();
        nam = txt_Nam.getText();
        if (thang.equals("")) {
            txt_Thang.setText(month.substring(5, 7));
        }
        if (nam.equals("")) {
            txt_Nam.setText(year.substring(0, 4));
        }
    }

//    public void loadTableByThangNam() {
//        model = (DefaultTableModel) tbl_ThongKe.getModel();
//        model.setRowCount(0);
//        try {
//            check();
//            List<ThongKe> list = thongKeDAO.selectByThangAndNam(Integer.parseInt(txt_Thang.getText()), Integer.parseInt(txt_Nam.getText()));
//            for (ThongKe dv : list) {
//                model.addRow(new Object[]{dv.getMaDV(), dv.getTenDV(), dv.getDoanhThu()});
//            }
//            
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(this, "Lỗi đổ dữ liệu vào bảng" + e);
//        }
//    }
    public FrThongKe() {
        initComponents();
        loadTableThongKeTang();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_Thang = new javax.swing.JTextField();
        txt_Nam = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_ThongKe = new javax.swing.JTable();
        btn_Tim = new javax.swing.JButton();
        rd_Tang = new javax.swing.JRadioButton();
        rd_Giam = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        btn_KetXuat = new javax.swing.JButton();

        setTitle("Thống Kê Doanh Thu");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Tháng");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Năm");

        tbl_ThongKe.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã Dịch Vụ", "Tên Dịch Vụ", "Doanh Thu tháng"
            }
        ));
        jScrollPane1.setViewportView(tbl_ThongKe);

        btn_Tim.setText("Tìm");
        btn_Tim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_TimActionPerformed(evt);
            }
        });

        buttonGroup1.add(rd_Tang);
        rd_Tang.setSelected(true);
        rd_Tang.setText("Tăng ");
        rd_Tang.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rd_TangMouseClicked(evt);
            }
        });

        buttonGroup1.add(rd_Giam);
        rd_Giam.setText("Giảm");
        rd_Giam.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rd_GiamMouseClicked(evt);
            }
        });
        rd_Giam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rd_GiamActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Sắp xếp ");

        btn_KetXuat.setText("Kết xuất");
        btn_KetXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_KetXuatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 697, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txt_Thang, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(txt_Nam, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_Tim)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btn_KetXuat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(rd_Tang)
                        .addGap(18, 18, 18)
                        .addComponent(rd_Giam, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_Nam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(txt_Thang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Tim))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rd_Tang)
                    .addComponent(rd_Giam)
                    .addComponent(jLabel3)
                    .addComponent(btn_KetXuat))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_TimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_TimActionPerformed
        try {
            loadTableThongKeTang();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi: " + e);
        }
    }//GEN-LAST:event_btn_TimActionPerformed

    private void rd_TangMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rd_TangMouseClicked
        try {
            loadTableThongKeTang();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_rd_TangMouseClicked

    private void rd_GiamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rd_GiamMouseClicked
        try {
            loadTableThongKeGiam();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_rd_GiamMouseClicked

    private void btn_KetXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_KetXuatActionPerformed
        FileOutputStream fos = null;
        XSSFWorkbook exelWorkbook = null;
        BufferedOutputStream bfos = null;
        try {

//            JFileChooser exelFileChoser = new JFileChooser("D:\\");
//                exelFileChoser.setDialogTitle("Save as ..");
//                FileNameExtensionFilter fnef = new FileNameExtensionFilter("Files", "xls", "xlsx", "slsm");
//                exelFileChoser.setFileFilter(fnef);
//                int chooser = exelFileChoser.showSaveDialog(null);
//                if (chooser == JFileChooser.APPROVE_OPTION) {
            exelWorkbook = new XSSFWorkbook();
            XSSFSheet excelSheet = exelWorkbook.createSheet("HDCT");
            for (int i = 0; i < model.getRowCount(); i++) {
                Sheet firstSheet = exelWorkbook.getSheetAt(0);
                XSSFRow exCellRow = excelSheet.createRow(i);
                for (int j = 0; j < model.getColumnCount(); j++) {
                    XSSFCell eCell = exCellRow.createCell(j);
                    eCell.setCellValue(model.getValueAt(i, j).toString());
                }

            }
//                }
//                if(chooser == JFileChooser.CANCEL_OPTION) {
//                    JOptionPane.showMessageDialog(this, "Lưu không thành công");
//                    return;
//                }
            fos = new FileOutputStream("D:\\Thống kê tháng " + txt_Thang.getText() + "-" + txt_Nam.getText() + ".xlsx");
            bfos = new BufferedOutputStream(fos);
            exelWorkbook.write(bfos);
            JOptionPane.showMessageDialog(this, "Thành công ");
            exelWorkbook.close();
            bfos.close();
            fos.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "lỗi: " + e);
        }
    }//GEN-LAST:event_btn_KetXuatActionPerformed

    private void rd_GiamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rd_GiamActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rd_GiamActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_KetXuat;
    private javax.swing.JButton btn_Tim;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rd_Giam;
    private javax.swing.JRadioButton rd_Tang;
    private javax.swing.JTable tbl_ThongKe;
    private javax.swing.JTextField txt_Nam;
    private javax.swing.JTextField txt_Thang;
    // End of variables declaration//GEN-END:variables
}
